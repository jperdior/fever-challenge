services:
  
  fetcher:
    build:
      context: ../..
      dockerfile: ops/docker/Dockerfile.fetcher.local
    restart: always
    environment:
        FLASK_APP: run.py
        FLASK_ENV: development
        FLASK_DEBUG: 1
        FLASK_RUN_HOST:
        POSTGRES_DB: fever_db
        POSTGRES_USER: fever_user
        POSTGRES_PASSWORD: fever_pass
        POSTGRES_HOST: db
        POSTGRES_PORT: 5432
        CELERY_BROKER_URL: amqp://guest:guest@rabbitmq:5672//
    depends_on:
        db:
          condition: service_healthy
    entrypoint: ["poetry", "run", "flask", "events", "fetch"]

  celery-worker:
    build:
      context: ../..
      dockerfile: ops/docker/Dockerfile.local
    volumes:
      - ../../:/app
    environment:
      FLASK_ENV: development
      CELERY_BROKER_URL: amqp://guest:guest@rabbitmq:5672//
    command: celery -A src.workers.make_celery.celery_app worker --loglevel=INFO
    depends_on:
      - api
      - rabbitmq
    restart: always